
####### Input Files (Original, Alternative, Context) #######
{'orig': 'examples/orphan/orphan.1.lp', 'alt': 'examples/orphan/orphan.2.lp', 'ctx': 'examples/orphan/orphan.ug'}

####### Input predicates from UG: #######
['living/1', 'father/2', 'mother/2']

####### Output predicates from UG: #######
['orphan/1']

Constructing final specification...
	Completed definition of public predicate orphan/1 is being added as a spec to the final specification.

     Started verification of specification from translated program
 Presupposed assumption: forall X1 exists X2 forall X3 (father(X3, X1) <-> X2 = X3)
 Presupposed assumption: forall X1 exists X2 forall X3 (mother(X3, X1) <-> X2 = X3)
 Presupposed completed definition of orphan/1: forall X1 (orphan(X1) <-> exists X2 (exists X3 (X3 = X2 and living(X3)) and exists X4 (X4 = X2 and not parent_living_2(X4)) and X1 = X2))
 Presupposed completed definition of parent_living_2/1: forall X1 (parent_living_2(X1) <-> exists X2, X3 (exists X4, X5 (X4 = X2 and X5 = X3 and father(X4, X5)) and exists X6 (X6 = X2 and living(X6)) and X1 = X3) or exists X7, X8 (exists X9, X10 (X9 = X7 and X10 = X8 and mother(X9, X10)) and exists X11 (X11 = X7 and living(X11)) and X1 = X8))
[s   Verifying spec: forall X1 (orphan(X1) <-> exists X2, X3, X4 (exists X5 (X5 = X2 and living(X5)) and exists X6, X7 (X6 = X3 and X7 = X2 and father(X6, X7)) and exists X8, X9 (X8 = X4 and X9 = X2 and mother(X8, X9)) and exists X10 (X10 = X3 and not living(X10)) and exists X11 (X11 = X4 and not living(X11)) and X1 = X2))[u[2K    Verified spec: forall X1 (orphan(X1) <-> exists X2, X3, X4 (exists X5 (X5 = X2 and living(X5)) and exists X6, X7 (X6 = X3 and X7 = X2 and father(X6, X7)) and exists X8, X9 (X8 = X4 and X9 = X2 and mother(X8, X9)) and exists X10 (X10 = X3 and not living(X10)) and exists X11 (X11 = X4 and not living(X11)) and X1 = X2)) in 0.104 seconds
    Finished verification of specification from translated program

     Started verification of translated program from specification
 Presupposed assumption: forall X1 exists X2 forall X3 (father(X3, X1) <-> X2 = X3)
 Presupposed assumption: forall X1 exists X2 forall X3 (mother(X3, X1) <-> X2 = X3)
 Presupposed completed definition of parent_living_2/1: forall X1 (parent_living_2(X1) <-> exists X2, X3 (exists X4, X5 (X4 = X2 and X5 = X3 and father(X4, X5)) and exists X6 (X6 = X2 and living(X6)) and X1 = X3) or exists X7, X8 (exists X9, X10 (X9 = X7 and X10 = X8 and mother(X9, X10)) and exists X11 (X11 = X7 and living(X11)) and X1 = X8))
 Presupposed spec: forall X1 (orphan(X1) <-> exists X2, X3, X4 (exists X5 (X5 = X2 and living(X5)) and exists X6, X7 (X6 = X3 and X7 = X2 and father(X6, X7)) and exists X8, X9 (X8 = X4 and X9 = X2 and mother(X8, X9)) and exists X10 (X10 = X3 and not living(X10)) and exists X11 (X11 = X4 and not living(X11)) and X1 = X2))
[s   Verifying completed definition of orphan/1: forall X1 (orphan(X1) <-> exists X2 (exists X3 (X3 = X2 and living(X3)) and exists X4 (X4 = X2 and not parent_living_2(X4)) and X1 = X2))[u[2K    Verified completed definition of orphan/1: forall X1 (orphan(X1) <-> exists X2 (exists X3 (X3 = X2 and living(X3)) and exists X4 (X4 = X2 and not parent_living_2(X4)) and X1 = X2)) in 0.734 seconds
    Finished verification of translated program from specification


####### Input Files (Original, Alternative, Context) #######
{'orig': 'examples/orphan/orphan.2.lp', 'alt': 'examples/orphan/orphan.1.lp', 'ctx': 'examples/orphan/orphan.ug'}

####### Input predicates from UG: #######
['living/1', 'father/2', 'mother/2']

####### Output predicates from UG: #######
['orphan/1']

Constructing final specification...
	Completed definition of public predicate orphan/1 is being added as a spec to the final specification.
	Completed definition of renamed private predicate parent_living_1/1 is being added as an input and assumption to the final specification.

     Started verification of specification from translated program
 Presupposed assumption: forall X1 exists X2 forall X3 (father(X3, X1) <-> X2 = X3)
 Presupposed assumption: forall X1 exists X2 forall X3 (mother(X3, X1) <-> X2 = X3)
 Presupposed assumption: forall X1 (parent_living_1(X1) <-> exists X2, X3 (exists X4, X5 (X4 = X2 and X5 = X3 and father(X4, X5)) and exists X6 (X6 = X2 and living(X6)) and X1 = X3) or exists X7, X8 (exists X9, X10 (X9 = X7 and X10 = X8 and mother(X9, X10)) and exists X11 (X11 = X7 and living(X11)) and X1 = X8))
 Presupposed completed definition of orphan/1: forall X1 (orphan(X1) <-> exists X2, X3, X4 (exists X5 (X5 = X2 and living(X5)) and exists X6, X7 (X6 = X3 and X7 = X2 and father(X6, X7)) and exists X8, X9 (X8 = X4 and X9 = X2 and mother(X8, X9)) and exists X10 (X10 = X3 and not living(X10)) and exists X11 (X11 = X4 and not living(X11)) and X1 = X2))
[s   Verifying spec: forall X1 (orphan(X1) <-> exists X2 (exists X3 (X3 = X2 and living(X3)) and exists X4 (X4 = X2 and not parent_living_1(X4)) and X1 = X2))[u[2K    Verified spec: forall X1 (orphan(X1) <-> exists X2 (exists X3 (X3 = X2 and living(X3)) and exists X4 (X4 = X2 and not parent_living_1(X4)) and X1 = X2)) in 0.707 seconds
    Finished verification of specification from translated program

     Started verification of translated program from specification
 Presupposed assumption: forall X1 exists X2 forall X3 (father(X3, X1) <-> X2 = X3)
 Presupposed assumption: forall X1 exists X2 forall X3 (mother(X3, X1) <-> X2 = X3)
 Presupposed assumption: forall X1 (parent_living_1(X1) <-> exists X2, X3 (exists X4, X5 (X4 = X2 and X5 = X3 and father(X4, X5)) and exists X6 (X6 = X2 and living(X6)) and X1 = X3) or exists X7, X8 (exists X9, X10 (X9 = X7 and X10 = X8 and mother(X9, X10)) and exists X11 (X11 = X7 and living(X11)) and X1 = X8))
 Presupposed spec: forall X1 (orphan(X1) <-> exists X2 (exists X3 (X3 = X2 and living(X3)) and exists X4 (X4 = X2 and not parent_living_1(X4)) and X1 = X2))
[s   Verifying completed definition of orphan/1: forall X1 (orphan(X1) <-> exists X2, X3, X4 (exists X5 (X5 = X2 and living(X5)) and exists X6, X7 (X6 = X3 and X7 = X2 and father(X6, X7)) and exists X8, X9 (X8 = X4 and X9 = X2 and mother(X8, X9)) and exists X10 (X10 = X3 and not living(X10)) and exists X11 (X11 = X4 and not living(X11)) and X1 = X2))[u[2K    Verified completed definition of orphan/1: forall X1 (orphan(X1) <-> exists X2, X3, X4 (exists X5 (X5 = X2 and living(X5)) and exists X6, X7 (X6 = X3 and X7 = X2 and father(X6, X7)) and exists X8, X9 (X8 = X4 and X9 = X2 and mother(X8, X9)) and exists X10 (X10 = X3 and not living(X10)) and exists X11 (X11 = X4 and not living(X11)) and X1 = X2)) in 0.067 seconds
    Finished verification of translated program from specification

